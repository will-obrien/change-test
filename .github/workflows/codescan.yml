# This is a main workflow to trigger codescan

name: CI

# Controls when the workflow will run
on:
    push:
      branches:
        - main
    pull_request:
      branches:
        - main
jobs:
    build:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout repository
          uses: actions/checkout@v2
        # - name: Changed Files
        #   uses: jitterbit/get-changed-files@v1
        #   id: files
        #   with:
        #     format: 'csv'
        #     token: ${{ secrets.GITHUB_TOKEN }}
        - name: Cache files
          uses: actions/cache@v2
          with:
              path: |
                  ~/.sonar
              key: ${{ runner.os }}-sonar
              restore-keys: ${{ runner.os }}-sonar
        - name: Run Codescan On Push
          # env:
          #   JAVA_TOOL_OPTIONS: "-Xmx8g"
          if: github.event_name == 'push'
          uses: codescan-io/codescan-scanner-action@1.3
          with:
            organization: ${{ secrets.codescan_organization }}
            projectKey: ${{ secrets.codescan_projectkey }}      
            login: ${{ secrets.codescan_token }}
            failOnRedQualityGate: true
            args: |
              sonar.inclusions=${{ steps.files.outputs.added_modified }}
              sonar.exclusions=**/aura/**/*.css,**/lwc/**/*.css,**/analyticscc__*,**/skuid__*,**/agf__*,**/ExAM__*,**/dupcheck__*,**/rh2__*,**/rhx__*,**/cnx*,**/SDOC*,**/rhx*,**/contentassets/**,**/dashboards/**,**/documents/**,**/eclair/**,**/email/**,**/emailservices/**,**/networkBranding/**,**/reports/**,**/wave/**,**/staticresources/*,**/ADM*,**/usf*,**/welkins_table*,**/sortablegrid*,**/CMTD*,**/DynPro*,**/LIMITMON*,**/ca_only*,**/flowmagic*,**/ear*,**/followrpt*,**/MPM4*,**/copado*,**/emptracing*,**/HealthCloudGA
        - name: Run Codescan On PR
          # env:
          #   JAVA_TOOL_OPTIONS: "-Xmx8g"
          if: github.event_name == 'pull_request'
          uses: codescan-io/codescan-scanner-action@1.3
          with:
            organization: ${{ secrets.codescan_organization }}
            projectKey: ${{ secrets.codescan_projectkey }}
            login: ${{ secrets.codescan_token }}
            generateSarifFile: true
            failOnRedQualityGate: true
            args: |
              sonar.pullrequest.branch=${{github.head_ref}}
              sonar.pullrequest.base=${{github.base_ref}}
              sonar.pullrequest.key=${{github.event.number}}
              # sonar.inclusions=${{ steps.files.outputs.added_modified }}
              # sonar.exclusions=**/aura/**/*.css,**/lwc/**/*.css,**/analyticscc__*,**/skuid__*,**/agf__*,**/ExAM__*,**/dupcheck__*,**/rh2__*,**/rhx__*,**/cnx*,**/SDOC*,**/rhx*,**/contentassets/**,**/dashboards/**,**/documents/**,**/eclair/**,**/email/**,**/emailservices/**,**/networkBranding/**,**/reports/**,**/wave/**,**/staticresources/*,**/ADM*,**/usf*,**/welkins_table*,**/sortablegrid*,**/CMTD*,**/DynPro*,**/LIMITMON*,**/ca_only*,**/flowmagic*,**/ear*,**/followrpt*,**/MPM4*,**/copado*,**/emptracing*,**/HealthCloudGA
        - name: Upload SARIF file
          uses: github/codeql-action/upload-sarif@v2
          with:
            sarif_file: codescan.sarif
        # - name: Quality Gate Check
        #   if: github.event_name == 'pull_request'
        #   env:
        #     TOKEN: ${{ secrets.codescan_token }}
        #     PR_KEY: ${{github.event.number}}
        #     PROJECT_KEY: ${{ secrets.codescan_projectkey }}
        #   run: |
        #     qg_status=$(curl -s -u "$TOKEN": "https://app.codescan.io/api/qualitygates/project_status?projectKey=$PROJECT_KEY&pullRequest=$PR_KEY" | jq -r '.projectStatus.status')
        #     echo "QG Script --> Quality Gate status is ${qg_status}"

        #     if [ "${qg_status}" != "OK" ]; then
        #       echo "QG Script --> Quality gate is not OK - exiting with error"
        #       exit 1
        #     fi

